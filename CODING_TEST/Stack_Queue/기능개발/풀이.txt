첫번째 for문에서 작업이 완료되는 시간을 리스트로 만들려했다.
tmp_time ==> 개별 작업의 완료 시간을 // 로 계산하려 했으나 올림을 해야하는 것을 깨닫고 math.ceil 이용.
다른 풀이를 보니 
        a = progresses[i] 
        b = speeds[i]
        tmp_time = math.ceil((100-a) / b)
과정을 zip을 이용한 반복문으로 한문장으로 끝내더라.
progresses = [math.ceil((100 - a) / b) for a, b in zip(progresses, speeds)]

time_lst 를 이용하여 answer에 append 해주는 반복문이다.

    for idx in range(len(time_lst)):
        if time_lst[idx] > time_lst[front]:  
            answer.append(idx - front)
            front = idx 
    answer.append(len(time_lst) - front)         

 pop을 이용하여 한칸씩 땡겨주려 하였으나 반복문이 돌아가면서 
반복문 한개를 이용하여 조건에 맞는 pop을 이용하기 쉽지 않았다. pop을 두번 하면 반복문에 의해 list IndexError 가 일어나기 쉽상이였다. 따라서 fornt라는 포인터 개념을 이용하여 문제를 풀이했습니다.
